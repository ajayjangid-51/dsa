// Segmentation ka mtlb bhi as like paging hi hai mtlb ki process ko divide/partitions krna, so that apn ram meh processes ko without much more internal and external-fragmentation k bina hi daal sake.
// now paging and segmentation meh antar/difference yeh hai ki Paging toh mtlb aankh mich k ki jati, mtlb paging meh process-divison ka dhyn rkha nhi jata, dhyn rkha-nhi-jata in the sense mtlb ki apn yeh dhyn nhi rkhtehh hai jaha pe apn division kr rhe hai vha process meh kya hai, jaise vaha process/program ka ek function bhi ho skta hai, jisko apn half-half meh kaat rhe hotehh hai,joki aage problems create kr skta hai jaise ki, divided-function ka ek upper-part toh ram ki frame-no.3 meh hai and lower-part ram ki frame-no.4 meh hai, so toh jaise hi cpu ne frame3 ko execute krliya and then turant apnko cpu ko frame4 provide krna hi padega, otherwise apna voh function toh bich meh adhura hi rhejayega, so toh mtlb Os ko yeh dhyn rkhna hoga ki voh frame4 ram-frame meh present honi hi chahiyehh, and agr voh ram-frame prsent nhi hoti toh mtlb vha page-fault problem hojayegi, and so mtlb asseh user ko kafi dikkat ho skti hai bcoz of huge-timetaken by the cpu just only running simple small function. so toh ess Problems ko overcome krne k liyeh apn Paging nhi Segmentation use krtehh hai.

// toh mtlb Segmentation is a proper-division/partiotining of process/Programs. and acche se boleh toh apn aseh bol sktehh hai Segmentation is division/partiotining of programs as per its functions/classes.
// so toh Segmentation k concept k according process k partitions(or Segments as per bcoz of Segmentations as like partitions were called pages bcoz of paging ) k size bhi diff-diff hoge.
// Segmentation k according apn ram ki framing nhi krtehh.
// now jaise apn jantehh hai ki like Paging , Segmentation k bareh meh bhi cpu ko kuch bhi nhi pta, mtlb cpu nhi janta ki processes ko jo segmentation huyii hai uske according ko processes k segments ram-memory meh kha-kha rakhe huyehh hai, so toh eske liyeh bhi apn segment-Table ka use krtehh hai, for converting logical-address-of-segments by cpu into segments's actual-physical-address in the ram.
// refer images to see conversion of LA(logical-address) to PA(physical-Address) by MMU(memory-management-unit) by using SegmentTable.

// tip-notepoint about cpu ki actual meh cpu krta hai, mtlb cpu kya kaam krta hai:=
// so toh cpu simply program meh jo instructions likhe huyehh hai na, bas unn instructions ko one-by-one execute krta hai, jaise program meh yeh-yeh instructions likhehh huyehh hai:-  a =2*3; b= 5*2; print(a), cin(b), etc..etc.. then toh mtlb jaise cpu ne 1st-instruction li and dekha ki yeh arthimatic-instruction hai toh yeh cpu ess instruction ko apne ALU(arithmatic-logic-unit mtbl jo arthimatic ka kaam krta hai) ko bhjdega, and toh mtlb aseh yeh statement(or mtlb instructions) ko execute hojayegi and then phir agli instruction ki print(a), then cpu yeh instruction I/O ko bhjdega, etc..etc.. toh mtlb "cpu" simply kaam leta hai and then uss kaam ko lene k baad meh alg-alg workers ko baat deta hai and phir phir voh workers simply uss kaam ko krdetehh hai and aseh kaam khtam ho jata hai. thus toh apn aseh bhi bolsktehh hai ki "cpu" as a "thakedaar" hai joki kaam leta hai and phir uss kaam ko voh-kaam-krne-wale majduroo se krvata hai. toh mtlb isiliy "cpu(mtlb thakedaar)"  is very important.