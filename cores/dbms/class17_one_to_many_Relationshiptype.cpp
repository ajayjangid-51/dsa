// one-to-many and many-to-one relationship are not same but we can conclude and understand by vice-versing the one-to-many for many-to-one:-
// yaha apn one-to-many type of relationship dekhenge and aur saat-hi-saat ER-model have one-to-many-relationship ko relational-model or mtlb code-implementable model meh mtlb simply "tables-ki-form" meh convert kaise krtehh hai voh dekhenge..

// so toh one-to-many relation meh kya hota hai ki 2-entities hoti hai and unke bich meh one-to-many relation hota hai , and eska mtlb ki entity1 k jo elements hai, voh individually entity2 k multiple-elements k saat meh koi rista rkhtehh hai ya mtlb rista hota hai.. for.eg:- student-entity and institude-subjects , so toh mtlb ek_student_element can be study multiple or many institute_subject_elements. jaise ajay is studing computersciene ,dsalso, os , cn  , dbms , littlephysics. to mtlb yeh one-to-many ya many-to-one relationship hai.
//  and phir one-to-many meh additionally and important baat yeh hai ki entity2 k har-elements particurally entity1 k kisi ek element se related honge, mtlb esa nhi hai hoga ki ajay dbms padh rha hai toh mtlb dbms aur koi(mtlb jaise sorabh, ayan) bhi padh rha hai  saat meh and agr esa hota hai then yeh realtionship one-to-many nhi actually meh it is many-to-many hogi

// so toh allover yeh one-to-many , one-to-one naming convention di gyi hai on the basis ki entities k elements aapas meh ekdusre kaise relationship meh hai. mtlb jaise student1 is related to many-subjects, toh mtlb yeh relation toh many-to-many hai q ki ek subject multiple students se related ho skta hai. now jaise customer placed-a-order on amazon_order,so toh yaha "placed-a-order" is a relation(or simply bolehh toh "relation" is just like a "verb" in grammer.) so toh mtlb yaha customer and amazon_order meh one-to-many relationship hai , as q ki mtlb ek customer toh amazon pe multiple order place kr skta hai but ek same-order-with-unique-id multiple-customer se placed nhi kiya ja skttaa thus toh , mtlb this customer, amazon_order relation is a one-to-many relation.

// now converting ERmodel into relationalModel(or mtlb into tables, applying keys-concepts)
// 3. so toh customer-table meh toh apnko customer-related-details milenge, and order-table meh apnko order-related-details milenge and relationship-table meh apnko konse customer ne konse order diyehh hai voh apnko pata chalega from the relationship-table.
// 2.one-to-many meh "many"-wale table ki primary-key bnti hai primary-key of the relation-table.
// 3.we can reduce the no.of-tables by merging relation-table and "many"-wali-table