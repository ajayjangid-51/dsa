// fileSystem-software toh database meh data ko in form files meh store/manage krta hai, whereas "dbms"-software data ko database meh in form meh relation(tables) ki form meh store/manage krta hai.

// as initially phle toh database ko manage krne k liyeh "filesystem" hi use hota hai, but phir "dbms" aagya, so toh mtlb apn yaha yehi dekhenge ki "filesystem" meh kya-kya khrabhi, kya-kya kamii , kya-kya problems face krni pdti thi, joki phir "dbms" meh sahi kri.

// jaise ki apne windows meh jo database actually "fileSystem" se hi manage hota hai, and fileSystem something like data ko herarical-form meh store krta hai, mtlb jaise ki folder meh subfolders and files ka create hona , and then unn subfolders more sub-subfolders and files ka create hona toh mtlb it like a tree-Structure, where each node is as in form of file or folder. as toh yeh "fileSystem" toh user's-personal-database k liyeh kaam aata hai.

// now aab baat aati hai "client-server-architecture" , mtlb ki ek "server" hai jismeh "database" hai, and phir baki log hai "clients" joki kafi dur-dur baithe hai and and voh sab ess "server" se eske database ka data access kr rhe hai, toh mtlb architecture k liyeh apn "fileSystem" use nhi kr sktehh hai, mtlb aseh architecture k liyeh apnko "dbms" ka use hi krna pdta hai q ki bcoz of these reasons:-
// 1.dbms made searching-fast and made less consumption of data. (for.eg, jaise ki apn IRCTC meh kisi ek particular-train k bareh meh search kr rhe hai(mtlb basically ek sql-database-command likh rhe hai), then as per the fileSystem k according sabhi trains ka data ek file meh store hoga, toh mtlb agr server-database pe "fileSystem" then voh toh apnko puri file(which is of very large-size mtlb in terms of 100s-of-gb) hi bhejega,whereas server-database pe "dbms" kaam kr rha hai then voh dbms trains-k-data ko tables ki form meh store krke rkhta hai, toh mtlb requested-querry k according voh uss particular-data ko find karega and then simply sirf vohi exact data(which will be of very less size) return karega. )
// 2.dbms made searching easy, mtlb ki "fileSystem" meh toh files ko search krne k liyeh apnko phle searching-file ka meta-data(jaise file-name, location, path etc..etc..) chahiyehh hota hai, but "dbms" se data search krne k liyeh apnko esa kuch metadata nhi chahiyehh hota.
// 3.concurrency. (concurrency mtlb multiple cheezo ka eksaat hona or mtlb eksaat ekjagah pe milna, specifically yaha toh concurrency ka mtlb multiple-users ka eksaat database ko access krna hai.), so toh concurrency k liyeh "fileSystem" meh protocols nhi hai q ki "filesystem" toh bana hi single-user-personal-use k liyeh, and whereas "dbms" meh concurrency-and-transaction related protocols hai, joki bohat hone wali data-inconsistency ko mitateh/prevent/remove krethh hai.
// 4.dbms provide more-security(or mtlb role-based-access-control-facility) to database, mtlb ki "dbms" se apn database pe heirarical-tree meh har tree-level pe "security" laga sktehh hai, whereas "fileSystem" meh esa nhi hota, mtlb fileSystem meh sirf intially sbse upr-hi-upr ek security-password lgta hai and phir uske baad sara database user k liyeh open hojata hai, toh fileSystem bhi single-user k respect thik hai but multiple-clients k respect meh thik nhi hai.
// 5.dbms provide data-redundancy(where redundancy mtlb अनावश्यक or mtlb unnecessary) mtlb data duplication/reapeation nhi hota. (mtlb "dbms"-software meh kuch constraints hai jaise primary-key, foreign-key constraints joki data-intigrity etc.etc. ko mantain/manage krtehh hai, so toh mtlb yeh alg-alg constraints in dbms-software ensure krtehh hai ki data-redundancy na ho.)

// notepoint:-
// (server mtlb ki ek bohat-badasara-computer jismeh mtlb multi-processor hai, 100gb-ram hai and 1lakh-gb ssd etc..etc.. mtlb ekdam super-fast-Computer jismeh basically ek-doo software hi dale hotehh hai, mtlb jaise ki koi database-server hai toh mtlb ess server meh sirf ek "dbms"-software dalaa hai, and yeh bohat sare clients-requests ko process krta hai.)
// 2.example of client-server-architecture are jaise: websites, smartphone-applications, etc.etcc jismeh database ka kaam ho rha ho.
// 3.database-server  mtlb ek server(mtlb ek bohat powerful-computer) and ek harddisk ya ssd(bohat badi harddisk/ssd) hai and ess server se yeh harddisk connected hai and ess server meh dbms-software installed hai, so now yeh server database k data ko share/broadcast kr skta hai toh the requesting cleints/users in with very efficiency.