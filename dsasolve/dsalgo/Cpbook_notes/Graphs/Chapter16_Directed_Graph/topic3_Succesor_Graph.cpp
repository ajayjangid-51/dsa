// successor
// Okay toh now aab apn baki chapter meh aab bas "Successor-Graphs" k bareh meh hi baat krenge.. jaise ki apn jantehh hai ki "Successors-Graphs" voh Directed-Graphs hotehh hai jismeh sabhi nodes ki outdegree "1" hoti hai, mtlb ki har node se ek hi edge start hoti hai, toh mtlb ki agr apn kisi bhi node se khde hoke dekhe toh vaha ek hi option hoga(whereas yaha option mtlb jaise apn backtracking-algo physically as a Graph(mtlb state-space-Tree) meh design krtehh hai then vaha jo har node(mtlb problem-current-state) se jo possible options hotehh hai na voh. ).
// Successor Graphs meh multiple Graph-Components bhi ho sktehh hai and har Component meh ek "cycle" hoti hai ya mtlb kuch paths hotehh hai jinseh "cycle" create ho jati hai.

// "Successor-Graphs" ko kabhi-kabhi "Functional-Graphs" bhi bola jata hai, q ki sabhi "Successor-Graphs" ek Fucntion se hi bantehh hai, mtlb har "Successor-Graph" ka ek corresponding Function hota hai. where yeh Corresponding-Function ka parameter ek node hota hai Graph ka and voh function in the return uss inputed "node" ka successor-node return krta hai. jaise:- see "pic1" to see the Successor-Function and its corresponding Successor-Graph.
// So toh yaha ess "pic1-Successor-Graph" meh apn dekh sktehh hai ki har node ka unique-successor hai, joki obvious hai q ki apn jantehh hai ki "Successor-graph" meh har node ka ek hi "Successor-node" hota hai,mtlb kisi 2 nodes ka ek successsor nhi hoga.