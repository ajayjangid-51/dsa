// üçïüçï class-1.5.3 now aab apn while-loop and if-statement ki time-complexities bhi dekhenge...üçïüçï

// As esseh toh for-loop and while-loop exactly same hi hotehh hai...
// as toh while-loop k liyeh apn as like as for-loop ki tarah while-loop meh starting-condition , ending-condition and updation condition check krenge and unn conditions k basis pe as like for-loop apn uss  while-loop ki time-complexity find-out krlenge...
// Or ya while-loop ki time-complexity find-out krne k liyeh apn simply while-loop ka for-loop meh convert krlenge as phir toh apn for-loop ki time-complexity toh easily bata hi sktehh hai...
// And as apn jo kaam for-loop se kr sktehh hai vohi kaam apn while-loop se bhi kr sktehh hai and vice-versa..

// As apn modern-for-loops meh apn kuch se bhi initialisation kr sktehh hai , koi bhi checking-condition rkh sktehh hai or kuch bhi updation kr sktehh hai. But phle purane wale for-loops meh apn sirf only decrement , increment kr sktehh the..

// Toh yeh kuch general esseh hi baat thi jo apn esehi dhyn meh rkh sktehh hai...

// Tip:- as loops ko simply cycles meh trace krlo for findinh the time-complexitiy of loop...

// As toh agr function meh ya program meh if-else-conditional-statements ho then vaha phir apne program ki time-complexity alg-alg ho skti hai mtlb jaise phir vaha best-case-time-compexity or and worst-case-time-complexity ho skti hai, as mtlb sure nhi hai ki diff time-complexities hogi but more chances hai ki diff time-complexities hogi....

// Jaise...

// pic2:
// As this is a program jismeh conditional-statement hone ki vajah se diff multi time-complexities hai...
// And...jaise

// pic3:
// As this is a program jismeh conditional-statements hone ki vajah se bhi time-complexity ek hi hai...
// Toh mtlb apnko throuly analize krna hota hai ki particular program ki kya time-complexity hogi....